<?php
/**
 * Setup customize items.
 *
 * @author   {PLUGIN_MAIN_CLASS_NAME}
 * @category Admin
 * @package  {PLUGIN_MAIN_CLASS_NAME}/Admin/Customize
 * @version  3.1.0
 */

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

if ( ! class_exists( '{PLUGIN_CLASS_PREFIX}_Admin_Customize', false ) ) :

/**
 * {PLUGIN_CLASS_PREFIX}_Admin_Customize Class.
 */
class {PLUGIN_CLASS_PREFIX}_Admin_Customize {

	/**
	 * Initialize customize actions.
	 */
	public function __construct() {
		// Include custom items to customizer nav menu settings.
		add_filter( 'customize_nav_menu_available_item_types', array( $this, 'register_customize_nav_menu_item_types' ) );
		add_filter( 'customize_nav_menu_available_items', array( $this, 'register_customize_nav_menu_items' ), 10, 4 );
	}

	/**
	 * Register customize new nav menu item types.
	 * This will register {PLUGIN_MAIN_CLASS_NAME} account endpoints as a nav menu item type.
	 *
	 * @since {VERSION}
	 * @param  array $item_types Menu item types.
	 * @return array
	 */
	public function register_customize_nav_menu_item_types( $item_types  ) {
		$item_types[] = array(
			'title'      => __( '{PLUGIN_MAIN_CLASS_NAME} endpoints', '{TEXT_DOMAIN}' ),
'type_label' => __( '{PLUGIN_MAIN_CLASS_NAME} endpoint', '{TEXT_DOMAIN}' ),
'type'       => '{PLUGIN_HOOK_CLASS_NAME}_nav',
'object'     => '{PLUGIN_HOOK_CLASS_NAME}_endpoint',
);

return $item_types;
}

/**
* Register account endpoints to customize nav menu items.
*
* @since {VERSION}
* @param  array   $items  List of nav menu items.
* @param  string  $type   Nav menu type.
* @param  string  $object Nav menu object.
* @param  integer $page   Page number.
* @return array
*/
public function register_customize_nav_menu_items( $items = array(), $type = '', $object = '', $page = 0 ) {
if ( '{PLUGIN_HOOK_CLASS_NAME}_endpoint' !== $object ) {
return $items;
}

// Don't allow pagination since all items are loaded at once.
if ( 0 < $page ) {
return $items;
}

// Get items from account menu.
$endpoints = {FILE_NAME_PREFIX}_get_account_menu_items();

// Remove dashboard item.
if ( isset( $endpoints['dashboard'] ) ) {
unset( $endpoints['dashboard'] );
}

// Include missing lost password.
$endpoints['lost-password'] = __( 'Lost password', '{TEXT_DOMAIN}' );

$endpoints = apply_filters( '{PLUGIN_HOOK_CLASS_NAME}_custom_nav_menu_items', $endpoints );

foreach ( $endpoints as $endpoint => $title ) {
$items[] = array(
'id'         => $endpoint,
'title'      => $title,
'type_label' => __( 'Custom Link', '{TEXT_DOMAIN}' ),
'url'        => esc_url_raw( {FILE_NAME_PREFIX}_get_account_endpoint_url( $endpoint ) ),
);
}

return $items;
}
}

endif;

return new {PLUGIN_CLASS_PREFIX}_Admin_Customize();
