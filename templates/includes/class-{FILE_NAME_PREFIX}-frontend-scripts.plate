<?php
/**
 * Handle frontend scripts
 *
 * @class       {PLUGIN_CLASS_PREFIX}_Frontend_Scripts
 * @version  {VERSION}
 * @package  {PLUGIN_MAIN_CLASS_NAME}/Classes/
 * @category    Class
 * @author      {AUTHOR}
 */

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

/**
 * {PLUGIN_CLASS_PREFIX}_Frontend_Scripts Class.
 */
class {PLUGIN_CLASS_PREFIX}_Frontend_Scripts {

	/**
	 * Contains an array of script handles registered by {PLUGIN_CLASS_PREFIX}.
	 * @var array
	 */
	private static $scripts = array();

	/**
	 * Contains an array of script handles registered by {PLUGIN_CLASS_PREFIX}.
	 * @var array
	 */
	private static $styles = array();

	/**
	 * Contains an array of script handles localized by {PLUGIN_CLASS_PREFIX}.
	 * @var array
	 */
	private static $wp_localize_scripts = array();

	/**
	 * Hook in methods.
	 */
	public static function init() {
		add_action( 'wp_enqueue_scripts', array( __CLASS__, 'load_scripts' ) );
		add_action( 'wp_print_scripts', array( __CLASS__, 'localize_printed_scripts' ), 5 );
		add_action( 'wp_print_footer_scripts', array( __CLASS__, 'localize_printed_scripts' ), 5 );
		add_action( 'setup_theme', array( __CLASS__, 'add_default_theme_support' ) );
	}

	/**
	 * Add theme support for default WP themes.
	 *
	 * @since {VERSION}
	 */
	public static function add_default_theme_support() {
		if ( in_array( get_option( 'template' ), {FILE_NAME_PREFIX}_get_core_supported_themes() ) ) {
			add_theme_support( '{FILE_NAME_PREFIX}-product-gallery-zoom' );
			add_theme_support( '{FILE_NAME_PREFIX}-product-gallery-lightbox' );
			add_theme_support( '{FILE_NAME_PREFIX}-product-gallery-slider' );
		}
	}

	/**
	 * Get styles for the frontend.
	 *
	 * @return array
	 */
	public static function get_styles() {
		return apply_filters( '{PLUGIN_HOOK_CLASS_NAME}_enqueue_styles', array(
			'{TEXT_DOMAIN}-layout' => array(
				'src'     => self::get_asset_url( 'assets/css/{TEXT_DOMAIN}-layout.css' ),
				'deps'    => '',
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
				'media'   => 'all',
				'has_rtl' => true,
			),
			'{TEXT_DOMAIN}-smallscreen' => array(
				'src'     => self::get_asset_url( 'assets/css/{TEXT_DOMAIN}-smallscreen.css' ),
				'deps'    => '{TEXT_DOMAIN}-layout',
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
				'media'   => 'only screen and (max-width: ' . apply_filters( '{PLUGIN_HOOK_CLASS_NAME}_style_smallscreen_breakpoint', $breakpoint = '768px' ) . ')',
				'has_rtl' => true,
			),
			'{TEXT_DOMAIN}-general' => array(
				'src'     => self::get_asset_url( 'assets/css/{TEXT-DOMAIN}.css' ),
				'deps'    => '',
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
				'media'   => 'all',
				'has_rtl' => true,
			),
		) );
	}

	/**
	 * Return protocol relative asset URL.
	 *
	 * @param string $path
	 *
	 * @return string
	 */
	private static function get_asset_url( $path ) {
		return str_replace( array( 'http:', 'https:' ), '', plugins_url( $path, {PLUGIN_CLASS_PREFIX}_PLUGIN_FILE ) );
	}

	/**
	 * Register a script for use.
	 *
	 * @uses   wp_register_script()
	 * @access private
	 * @param  string   $handle
	 * @param  string   $path
	 * @param  string[] $deps
	 * @param  string   $version
	 * @param  boolean  $in_footer
	 */
	private static function register_script( $handle, $path, $deps = array( 'jquery' ), $version = {PLUGIN_CLASS_PREFIX}_VERSION, $in_footer = true ) {
		self::$scripts[] = $handle;
		wp_register_script( $handle, $path, $deps, $version, $in_footer );
	}

	/**
	 * Register and enqueue a script for use.
	 *
	 * @uses   wp_enqueue_script()
	 * @access private
	 * @param  string   $handle
	 * @param  string   $path
	 * @param  string[] $deps
	 * @param  string   $version
	 * @param  boolean  $in_footer
	 */
	private static function enqueue_script( $handle, $path = '', $deps = array( 'jquery' ), $version = {PLUGIN_CLASS_PREFIX}_VERSION, $in_footer = true ) {
		if ( ! in_array( $handle, self::$scripts ) && $path ) {
			self::register_script( $handle, $path, $deps, $version, $in_footer );
		}
		wp_enqueue_script( $handle );
	}

	/**
	 * Register a style for use.
	 *
	 * @uses   wp_register_style()
	 * @access private
	 * @param  string   $handle
	 * @param  string   $path
	 * @param  string[] $deps
	 * @param  string   $version
	 * @param  string   $media
	 * @param  boolean  $has_rtl
	 */
	private static function register_style( $handle, $path, $deps = array(), $version = {PLUGIN_CLASS_PREFIX}_VERSION, $media = 'all', $has_rtl = false ) {
		self::$styles[] = $handle;
		wp_register_style( $handle, $path, $deps, $version, $media );

		if ( $has_rtl ) {
			wp_style_add_data( $handle, 'rtl', 'replace' );
		}
	}

	/**
	 * Register and enqueue a styles for use.
	 *
	 * @uses   wp_enqueue_style()
	 * @access private
	 * @param  string   $handle
	 * @param  string   $path
	 * @param  string[] $deps
	 * @param  string   $version
	 * @param  string   $media
	 * @param  boolean  $has_rtl
	 */
	private static function enqueue_style( $handle, $path = '', $deps = array(), $version = {PLUGIN_CLASS_PREFIX}_VERSION, $media = 'all', $has_rtl = false ) {
		if ( ! in_array( $handle, self::$styles ) && $path ) {
			self::register_style( $handle, $path, $deps, $version, $media, $has_rtl );
		}
		wp_enqueue_style( $handle );
	}

	/**
	 * Register all {PLUGIN_CLASS_PREFIX} scripts.
	 */
	private static function register_scripts() {
		$suffix           = defined( 'SCRIPT_DEBUG' ) && SCRIPT_DEBUG ? '' : '.min';
		$register_scripts = array(
			'flexslider' => array(
				'src'     => self::get_asset_url( 'assets/js/flexslider/jquery.flexslider' . $suffix . '.js' ),
				'deps'    => array( 'jquery' ),
				'version' => '2.6.1',
			),
			'js-cookie' => array(
				'src'     => self::get_asset_url( 'assets/js/js-cookie/js.cookie' . $suffix . '.js' ),
				'deps'    => array(),
				'version' => '2.1.4',
			),
			'jquery-blockui' => array(
				'src'     => self::get_asset_url( 'assets/js/jquery-blockui/jquery.blockUI' . $suffix . '.js' ),
				'deps'    => array( 'jquery' ),
				'version' => '2.70',
			),
			'jquery-cookie' => array( // deprecated.
				'src'     => self::get_asset_url( 'assets/js/jquery-cookie/jquery.cookie' . $suffix . '.js' ),
				'deps'    => array( 'jquery' ),
				'version' => '1.4.1',
			),
			'jquery-payment' => array(
				'src'     => self::get_asset_url( 'assets/js/jquery-payment/jquery.payment' . $suffix . '.js' ),
				'deps'    => array( 'jquery' ),
				'version' => '3.0.0',
			),
			'photoswipe' => array(
				'src'     => self::get_asset_url( 'assets/js/photoswipe/photoswipe' . $suffix . '.js' ),
				'deps'    => array(),
				'version' => '4.1.1',
			),
			'photoswipe-ui-default'  => array(
				'src'     => self::get_asset_url( 'assets/js/photoswipe/photoswipe-ui-default' . $suffix . '.js' ),
				'deps'    => array( 'photoswipe' ),
				'version' => '4.1.1',
			),
			'prettyPhoto' => array( // deprecated.
				'src'     => self::get_asset_url( 'assets/js/prettyPhoto/jquery.prettyPhoto' . $suffix . '.js' ),
				'deps'    => array( 'jquery' ),
				'version' => '3.1.6',
			),
			'prettyPhoto-init' => array( // deprecated.
				'src'     => self::get_asset_url( 'assets/js/prettyPhoto/jquery.prettyPhoto.init' . $suffix . '.js' ),
				'deps'    => array( 'jquery', 'prettyPhoto' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'select2' => array(
				'src'     => self::get_asset_url( 'assets/js/select2/select2.full' . $suffix . '.js' ),
				'deps'    => array( 'jquery' ),
				'version' => '4.0.3',
			),
			'{FILE_NAME_PREFIX}-address-i18n' => array(
				'src'     => self::get_asset_url( 'assets/js/frontend/address-i18n' . $suffix . '.js' ),
				'deps'    => array( 'jquery' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'{FILE_NAME_PREFIX}-add-payment-method' => array(
				'src'     => self::get_asset_url( 'assets/js/frontend/add-payment-method' . $suffix . '.js' ),
				'deps'    => array( 'jquery', '{TEXT_DOMAIN}' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'{FILE_NAME_PREFIX}-cart' => array(
				'src'     => self::get_asset_url( 'assets/js/frontend/cart' . $suffix . '.js' ),
				'deps'    => array( 'jquery', '{FILE_NAME_PREFIX}-country-select', '{FILE_NAME_PREFIX}-address-i18n' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'{FILE_NAME_PREFIX}-cart-fragments' => array(
				'src'     => self::get_asset_url( 'assets/js/frontend/cart-fragments' . $suffix . '.js' ),
				'deps'    => array( 'jquery', 'js-cookie' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'{FILE_NAME_PREFIX}-checkout' => array(
				'src'     => self::get_asset_url( 'assets/js/frontend/checkout' . $suffix . '.js' ),
				'deps'    => array( 'jquery', '{TEXT_DOMAIN}', '{FILE_NAME_PREFIX}-country-select', '{FILE_NAME_PREFIX}-address-i18n' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'{FILE_NAME_PREFIX}-country-select' => array(
				'src'     => self::get_asset_url( 'assets/js/frontend/country-select' . $suffix . '.js' ),
				'deps'    => array( 'jquery' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'{FILE_NAME_PREFIX}-credit-card-form' => array(
				'src'     => self::get_asset_url( 'assets/js/frontend/credit-card-form' . $suffix . '.js' ),
				'deps'    => array( 'jquery', 'jquery-payment' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'{FILE_NAME_PREFIX}-add-to-cart' => array(
				'src'     => self::get_asset_url( 'assets/js/frontend/add-to-cart' . $suffix . '.js' ),
				'deps'    => array( 'jquery' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'{FILE_NAME_PREFIX}-add-to-cart-variation' => array(
				'src'     => self::get_asset_url( 'assets/js/frontend/add-to-cart-variation' . $suffix . '.js' ),
				'deps'    => array( 'jquery', 'wp-util' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'{FILE_NAME_PREFIX}-geolocation' => array(
				'src'     => self::get_asset_url( 'assets/js/frontend/geolocation' . $suffix . '.js' ),
				'deps'    => array( 'jquery' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'{FILE_NAME_PREFIX}-lost-password' => array(
				'src'     => self::get_asset_url( 'assets/js/frontend/lost-password' . $suffix . '.js' ),
				'deps'    => array( 'jquery', '{TEXT_DOMAIN}' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'{FILE_NAME_PREFIX}-password-strength-meter' => array(
				'src'     => self::get_asset_url( 'assets/js/frontend/password-strength-meter' . $suffix . '.js' ),
				'deps'    => array( 'jquery', 'password-strength-meter' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'{FILE_NAME_PREFIX}-single-product' => array(
				'src'     => self::get_asset_url( 'assets/js/frontend/single-product' . $suffix . '.js' ),
				'deps'    => array( 'jquery' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'{TEXT_DOMAIN}' => array(
				'src'     => self::get_asset_url( 'assets/js/frontend/{TEXT-DOMAIN}' . $suffix . '.js' ),
				'deps'    => array( 'jquery', 'jquery-blockui', 'js-cookie' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
			),
			'zoom' => array(
				'src'     => self::get_asset_url( 'assets/js/zoom/jquery.zoom' . $suffix . '.js' ),
				'deps'    => array( 'jquery' ),
				'version' => '1.7.15',
			),
		);
		foreach ( $register_scripts as $name => $props ) {
			self::register_script( $name, $props['src'], $props['deps'], $props['version'] );
		}
	}

	/**
	 * Register all {PLUGIN_CLASS_PREFIX} sty;es.
	 */
	private static function register_styles() {
		$register_styles = array(
			'photoswipe' => array(
				'src'     => self::get_asset_url( 'assets/css/photoswipe/photoswipe.css' ),
				'deps'    => array(),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
				'has_rtl' => false,
			),
			'photoswipe-default-skin' => array(
				'src'     => self::get_asset_url( 'assets/css/photoswipe/default-skin/default-skin.css' ),
				'deps'    => array( 'photoswipe' ),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
				'has_rtl' => false,
			),
			'select2' => array(
				'src'     => self::get_asset_url( 'assets/css/select2.css' ),
				'deps'    => array(),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
				'has_rtl' => false,
			),
			'{PLUGIN_HOOK_CLASS_NAME}_prettyPhoto_css' => array( // deprecated.
				'src'     => self::get_asset_url( 'assets/css/prettyPhoto.css' ),
				'deps'    => array(),
				'version' => {PLUGIN_CLASS_PREFIX}_VERSION,
				'has_rtl' => true,
			),
		);
		foreach ( $register_styles as $name => $props ) {
			self::register_style( $name, $props['src'], $props['deps'], $props['version'], 'all', $props['has_rtl'] );
		}
	}

	/**
	 * Register/queue frontend scripts.
	 */
	public static function load_scripts() {
		global $post;

		if ( ! did_action( 'before_{PLUGIN_HOOK_CLASS_NAME}_init' ) ) {
			return;
		}

		self::register_scripts();
		self::register_styles();

		if ( 'yes' === get_option( '{PLUGIN_HOOK_CLASS_NAME}_enable_ajax_add_to_cart' ) ) {
			self::enqueue_script( '{FILE_NAME_PREFIX}-add-to-cart' );
		}
		if ( is_cart() ) {
			self::enqueue_script( '{FILE_NAME_PREFIX}-cart' );
		}
		if ( is_checkout() || is_account_page() ) {
			self::enqueue_script( 'select2' );
			self::enqueue_style( 'select2' );

			// Password strength meter. Load in checkout, account login and edit account page.
			if ( ( 'no' === get_option( '{PLUGIN_HOOK_CLASS_NAME}_registration_generate_password' ) && ! is_user_logged_in() ) || is_edit_account_page() || is_lost_password_page() ) {
				self::enqueue_script( '{FILE_NAME_PREFIX}-password-strength-meter' );
			}
		}
		if ( is_checkout() ) {
			self::enqueue_script( '{FILE_NAME_PREFIX}-checkout' );
		}
		if ( is_add_payment_method_page() ) {
			self::enqueue_script( '{FILE_NAME_PREFIX}-add-payment-method' );
		}
		if ( is_lost_password_page() ) {
			self::enqueue_script( '{FILE_NAME_PREFIX}-lost-password' );
		}

		// Load gallery scripts on product pages only if supported.
		if ( is_product() || ( ! empty( $post->post_content ) && strstr( $post->post_content, '[product_page' ) ) ) {
			if ( current_theme_supports( '{FILE_NAME_PREFIX}-product-gallery-zoom' ) ) {
				self::enqueue_script( 'zoom' );
			}
			if ( current_theme_supports( '{FILE_NAME_PREFIX}-product-gallery-slider' ) ) {
				self::enqueue_script( 'flexslider' );
			}
			if ( current_theme_supports( '{FILE_NAME_PREFIX}-product-gallery-lightbox' ) ) {
				self::enqueue_script( 'photoswipe-ui-default' );
				self::enqueue_style( 'photoswipe-default-skin' );
				add_action( 'wp_footer', '{PLUGIN_HOOK_CLASS_NAME}_photoswipe' );
			}
			self::enqueue_script( '{FILE_NAME_PREFIX}-single-product' );
		}

		if ( 'geolocation_ajax' === get_option( '{PLUGIN_HOOK_CLASS_NAME}_default_customer_address' ) ) {
			$ua = {FILE_NAME_PREFIX}_get_user_agent(); // Exclude common bots from geolocation by user agent.

			if ( ! strstr( $ua, 'bot' ) && ! strstr( $ua, 'spider' ) && ! strstr( $ua, 'crawl' ) ) {
				self::enqueue_script( '{FILE_NAME_PREFIX}-geolocation' );
			}
		}

		// Global frontend scripts
		self::enqueue_script( '{TEXT_DOMAIN}' );
		self::enqueue_script( '{FILE_NAME_PREFIX}-cart-fragments' );

		// CSS Styles
		if ( $enqueue_styles = self::get_styles() ) {
			foreach ( $enqueue_styles as $handle => $args ) {
				if ( ! isset( $args['has_rtl'] ) ) {
					$args['has_rtl'] = false;
				}

				self::enqueue_style( $handle, $args['src'], $args['deps'], $args['version'], $args['media'], $args['has_rtl'] );
			}
		}
	}

	/**
	 * Localize a {PLUGIN_CLASS_PREFIX} script once.
	 * @access private
	 * @since {VERSION}
	 * @param  string $handle
	 */
	private static function localize_script( $handle ) {
		if ( ! in_array( $handle, self::$wp_localize_scripts ) && wp_script_is( $handle ) && ( $data = self::get_script_data( $handle ) ) ) {
			$name                        = str_replace( '-', '_', $handle ) . '_params';
			self::$wp_localize_scripts[] = $handle;
			wp_localize_script( $handle, $name, apply_filters( $name, $data ) );
		}
	}

	/**
	 * Return data for script handles.
	 * @access private
	 * @param  string $handle
	 * @return array|bool
	 */
	private static function get_script_data( $handle ) {
		global $wp;

		switch ( $handle ) {
			case '{TEXT_DOMAIN}' :
				return array(
					'ajax_url'    => {PLUGIN_CLASS_PREFIX}()->ajax_url(),
					'{FILE_NAME_PREFIX}_ajax_url' => {PLUGIN_CLASS_PREFIX}_AJAX::get_endpoint( "%%endpoint%%" ),
				);
			break;
			case '{FILE_NAME_PREFIX}-geolocation' :
				return array(
					'{FILE_NAME_PREFIX}_ajax_url'  => {PLUGIN_CLASS_PREFIX}_AJAX::get_endpoint( "%%endpoint%%" ),
					'home_url'     => home_url(),
					'is_available' => ! ( is_cart() || is_account_page() || is_checkout() || is_customize_preview() ) ? '1' : '0',
					'hash'         => isset( $_GET['v'] ) ? {FILE_NAME_PREFIX}_clean( $_GET['v'] ) : '',
				);
			break;
			case '{FILE_NAME_PREFIX}-single-product' :
				return array(
					'i18n_required_rating_text' => esc_attr__( 'Please select a rating', '{TEXT_DOMAIN}' ),
					'review_rating_required'    => get_option( '{PLUGIN_HOOK_CLASS_NAME}_review_rating_required' ),
					'flexslider'                => apply_filters( '{PLUGIN_HOOK_CLASS_NAME}_single_product_carousel_options', array(
						'rtl'            => is_rtl(),
						'animation'      => 'slide',
						'smoothHeight'   => true,
						'directionNav'   => false,
						'controlNav'     => 'thumbnails',
						'slideshow'      => false,
						'animationSpeed' => 500,
						'animationLoop'  => false, // Breaks photoswipe pagination if true.
					) ),
					'zoom_enabled'       => apply_filters( '{PLUGIN_HOOK_CLASS_NAME}_single_product_zoom_enabled', get_theme_support( '{FILE_NAME_PREFIX}-product-gallery-zoom' ) ),
					'photoswipe_enabled' => apply_filters( '{PLUGIN_HOOK_CLASS_NAME}_single_product_photoswipe_enabled', get_theme_support( '{FILE_NAME_PREFIX}-product-gallery-lightbox' ) ),
					'photoswipe_options' => apply_filters( '{PLUGIN_HOOK_CLASS_NAME}_single_product_photoswipe_options', array(
						'shareEl'               => false,
						'closeOnScroll'         => false,
						'history'               => false,
						'hideAnimationDuration' => 0,
						'showAnimationDuration' => 0
					) ),
					'flexslider_enabled' => apply_filters( '{PLUGIN_HOOK_CLASS_NAME}_single_product_flexslider_enabled', get_theme_support( '{FILE_NAME_PREFIX}-product-gallery-slider' ) ),
				);
			break;
			case '{FILE_NAME_PREFIX}-checkout' :
				return array(
					'ajax_url'                  => {PLUGIN_CLASS_PREFIX}()->ajax_url(),
					'{FILE_NAME_PREFIX}_ajax_url'               => {PLUGIN_CLASS_PREFIX}_AJAX::get_endpoint( "%%endpoint%%" ),
					'update_order_review_nonce' => wp_create_nonce( 'update-order-review' ),
					'apply_coupon_nonce'        => wp_create_nonce( 'apply-coupon' ),
					'remove_coupon_nonce'       => wp_create_nonce( 'remove-coupon' ),
					'option_guest_checkout'     => get_option( '{PLUGIN_HOOK_CLASS_NAME}_enable_guest_checkout' ),
					'checkout_url'              => {PLUGIN_CLASS_PREFIX}_AJAX::get_endpoint( "checkout" ),
					'is_checkout'               => is_page( {FILE_NAME_PREFIX}_get_page_id( 'checkout' ) ) && empty( $wp->query_vars['order-pay'] ) && ! isset( $wp->query_vars['order-received'] ) ? 1 : 0,
					'debug_mode'                => defined( 'WP_DEBUG' ) && WP_DEBUG,
					'i18n_checkout_error'       => esc_attr__( 'Error processing checkout. Please try again.', '{TEXT_DOMAIN}' ),
				);
			break;
			case '{FILE_NAME_PREFIX}-address-i18n' :
				return array(
					'locale'             => json_encode( {PLUGIN_CLASS_PREFIX}()->countries->get_country_locale() ),
					'locale_fields'      => json_encode( {PLUGIN_CLASS_PREFIX}()->countries->get_country_locale_field_selectors() ),
					'i18n_required_text' => esc_attr__( 'required', '{TEXT_DOMAIN}' ),
				);
			break;
			case '{FILE_NAME_PREFIX}-cart' :
				return array(
					'ajax_url'                     => {PLUGIN_CLASS_PREFIX}()->ajax_url(),
					'{FILE_NAME_PREFIX}_ajax_url'                  => {PLUGIN_CLASS_PREFIX}_AJAX::get_endpoint( "%%endpoint%%" ),
					'update_shipping_method_nonce' => wp_create_nonce( "update-shipping-method" ),
					'apply_coupon_nonce'           => wp_create_nonce( "apply-coupon" ),
					'remove_coupon_nonce'          => wp_create_nonce( "remove-coupon" ),
				);
			break;
			case '{FILE_NAME_PREFIX}-cart-fragments' :
				return array(
					'ajax_url'      => {PLUGIN_CLASS_PREFIX}()->ajax_url(),
					'{FILE_NAME_PREFIX}_ajax_url'   => {PLUGIN_CLASS_PREFIX}_AJAX::get_endpoint( "%%endpoint%%" ),
					'fragment_name' => apply_filters( '{PLUGIN_HOOK_CLASS_NAME}_cart_fragment_name', '{FILE_NAME_PREFIX}_fragments_' . md5( get_current_blog_id() . '_' . get_site_url( get_current_blog_id(), '/' ) ) ),
				);
			break;
			case '{FILE_NAME_PREFIX}-add-to-cart' :
				return array(
					'ajax_url'                => {PLUGIN_CLASS_PREFIX}()->ajax_url(),
					'{FILE_NAME_PREFIX}_ajax_url'             => {PLUGIN_CLASS_PREFIX}_AJAX::get_endpoint( "%%endpoint%%" ),
					'i18n_view_cart'          => esc_attr__( 'View cart', '{TEXT_DOMAIN}' ),
					'cart_url'                => apply_filters( '{PLUGIN_HOOK_CLASS_NAME}_add_to_cart_redirect', {FILE_NAME_PREFIX}_get_cart_url() ),
					'is_cart'                 => is_cart(),
					'cart_redirect_after_add' => get_option( '{PLUGIN_HOOK_CLASS_NAME}_cart_redirect_after_add' ),
				);
			break;
			case '{FILE_NAME_PREFIX}-add-to-cart-variation' :
				// We also need the wp.template for this script :)
				{FILE_NAME_PREFIX}_get_template( 'single-product/add-to-cart/variation.php' );

				return array(
					'{FILE_NAME_PREFIX}_ajax_url'                      => {PLUGIN_CLASS_PREFIX}_AJAX::get_endpoint( "%%endpoint%%" ),
					'i18n_no_matching_variations_text' => esc_attr__( 'Sorry, no products matched your selection. Please choose a different combination.', '{TEXT_DOMAIN}' ),
					'i18n_make_a_selection_text'       => esc_attr__( 'Please select some product options before adding this product to your cart.', '{TEXT_DOMAIN}' ),
					'i18n_unavailable_text'            => esc_attr__( 'Sorry, this product is unavailable. Please choose a different combination.', '{TEXT_DOMAIN}' ),
				);
			break;
			case '{FILE_NAME_PREFIX}-country-select' :
				return array(
					'countries'                 => json_encode( array_merge( {PLUGIN_CLASS_PREFIX}()->countries->get_allowed_country_states(), {PLUGIN_CLASS_PREFIX}()->countries->get_shipping_country_states() ) ),
					'i18n_select_state_text'    => esc_attr__( 'Select an option&hellip;', '{TEXT_DOMAIN}' ),
					'i18n_no_matches'           => _x( 'No matches found', 'enhanced select', '{TEXT_DOMAIN}' ),
					'i18n_ajax_error'           => _x( 'Loading failed', 'enhanced select', '{TEXT_DOMAIN}' ),
					'i18n_input_too_short_1'    => _x( 'Please enter 1 or more characters', 'enhanced select', '{TEXT_DOMAIN}' ),
					'i18n_input_too_short_n'    => _x( 'Please enter %qty% or more characters', 'enhanced select', '{TEXT_DOMAIN}' ),
					'i18n_input_too_long_1'     => _x( 'Please delete 1 character', 'enhanced select', '{TEXT_DOMAIN}' ),
					'i18n_input_too_long_n'     => _x( 'Please delete %qty% characters', 'enhanced select', '{TEXT_DOMAIN}' ),
					'i18n_selection_too_long_1' => _x( 'You can only select 1 item', 'enhanced select', '{TEXT_DOMAIN}' ),
					'i18n_selection_too_long_n' => _x( 'You can only select %qty% items', 'enhanced select', '{TEXT_DOMAIN}' ),
					'i18n_load_more'            => _x( 'Loading more results&hellip;', 'enhanced select', '{TEXT_DOMAIN}' ),
					'i18n_searching'            => _x( 'Searching&hellip;', 'enhanced select', '{TEXT_DOMAIN}' ),
				);
			break;
			case '{FILE_NAME_PREFIX}-password-strength-meter' :
				return array(
					'min_password_strength' => apply_filters( '{PLUGIN_HOOK_CLASS_NAME}_min_password_strength', 3 ),
					'i18n_password_error'   => esc_attr__( 'Please enter a stronger password.', '{TEXT_DOMAIN}' ),
					'i18n_password_hint'    => esc_attr( wp_get_password_hint() ),
				);
			break;
		}
		return false;
	}

	/**
	 * Localize scripts only when enqueued.
	 */
	public static function localize_printed_scripts() {
		foreach ( self::$scripts as $handle ) {
			self::localize_script( $handle );
		}
	}
}

{PLUGIN_CLASS_PREFIX}_Frontend_Scripts::init();
